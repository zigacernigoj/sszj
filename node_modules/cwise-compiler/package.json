{
  "_args": [
    [
      {
        "raw": "cwise-compiler@^1.1.2",
        "scope": null,
        "escapedName": "cwise-compiler",
        "name": "cwise-compiler",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/media/ziga/58686E1C686DF8E0/MAGISTERIJ/2016_2017/IOI/PROJEKT/SSZJbackend/sszj/node_modules/ndarray-pack"
    ]
  ],
  "_from": "cwise-compiler@>=1.1.2 <2.0.0",
  "_id": "cwise-compiler@1.1.2",
  "_inCache": true,
  "_location": "/cwise-compiler",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "jaspervdg",
    "email": "th.v.d.gronde@hccnet.nl"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cwise-compiler@^1.1.2",
    "scope": null,
    "escapedName": "cwise-compiler",
    "name": "cwise-compiler",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ndarray-pack"
  ],
  "_resolved": "https://registry.npmjs.org/cwise-compiler/-/cwise-compiler-1.1.2.tgz",
  "_shasum": "3bcbfd063bd1d69d25b3eebfc56df0de15d4c9d0",
  "_shrinkwrap": null,
  "_spec": "cwise-compiler@^1.1.2",
  "_where": "/media/ziga/58686E1C686DF8E0/MAGISTERIJ/2016_2017/IOI/PROJEKT/SSZJbackend/sszj/node_modules/ndarray-pack",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/scijs/cwise-compiler/issues"
  },
  "contributors": [
    {
      "name": "Jasper van de Gronde",
      "email": "th.v.d.gronde@hccnet.nl"
    }
  ],
  "dependencies": {
    "uniq": "^1.0.0"
  },
  "description": "cwise's internal compiler",
  "devDependencies": {
    "cwise-parser": "^1.0.0",
    "ndarray": "^1.0.15",
    "ndarray-ops": "^1.2.2",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3bcbfd063bd1d69d25b3eebfc56df0de15d4c9d0",
    "tarball": "https://registry.npmjs.org/cwise-compiler/-/cwise-compiler-1.1.2.tgz"
  },
  "gitHead": "29e146315bd0a8c50bd44b9b6b5bf4b769bd7aec",
  "homepage": "https://github.com/scijs/cwise-compiler#readme",
  "keywords": [
    "cwise",
    "ndarray",
    "compiler"
  ],
  "license": "MIT",
  "main": "compiler.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    },
    {
      "name": "jaspervdg",
      "email": "th.v.d.gronde@hccnet.nl"
    },
    {
      "name": "rreusser",
      "email": "rsreusser@gmail.com"
    },
    {
      "name": "planeshifter",
      "email": "pgb@andrew.cmu.edu"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "cwise-compiler",
  "optionalDependencies": {},
  "readme": "cwise-compiler\r\n==============\r\nJust the compiler from cwise.  You can call this directly if you know what you are doing and want to skip calling cwise-parser and including esprima.  This is only recommended in extreme cases though.  Otherwise you should stick to the default interface in cwise and not mess around with this craziness.\r\n\r\n[![build status](https://secure.travis-ci.org/scijs/cwise-compiler.png)](http://travis-ci.org/scijs/cwise-compiler)\r\n\r\n# Install\r\nInstall using [npm](https://www.npmjs.com/):\r\n\r\n    npm install cwise-compiler\r\n\r\n# API\r\n#### `require(\"cwise-compiler\")(procedure)`\r\nCompiles a cwise procedure for the given procedure.  The object procedure must have the following fields:\r\n\r\n* `args` An array of argument types (as in cwise)\r\n* `pre` A parsed pre function\r\n* `body` A parsed body function\r\n* `post` A parsed post function\r\n* `funcName` Name of the function\r\n* `blockSize` Block size to generate\r\n* `debug` Debug mode flag\r\n\r\n# License\r\n(c) 2013 Mikola Lysenko. MIT License\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/scijs/cwise-compiler.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.1.2"
}

{
  "_args": [
    [
      {
        "raw": "get-pixels",
        "scope": null,
        "escapedName": "get-pixels",
        "name": "get-pixels",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/media/ziga/58686E1C686DF8E0/MAGISTERIJ/2016_2017/IOI/PROJEKT/SSZJbackend/sszj"
    ]
  ],
  "_from": "get-pixels@latest",
  "_id": "get-pixels@3.3.0",
  "_inCache": true,
  "_location": "/get-pixels",
  "_nodeVersion": "0.12.2",
  "_npmOperationalInternal": {
    "host": "packages-6-west.internal.npmjs.com",
    "tmp": "tmp/get-pixels-3.3.0.tgz_1456159832703_0.4654398539569229"
  },
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "2.13.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "get-pixels",
    "scope": null,
    "escapedName": "get-pixels",
    "name": "get-pixels",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/get-pixels/-/get-pixels-3.3.0.tgz",
  "_shasum": "8d9795beae18850b840f749581badc05d3e36e41",
  "_shrinkwrap": null,
  "_spec": "get-pixels",
  "_where": "/media/ziga/58686E1C686DF8E0/MAGISTERIJ/2016_2017/IOI/PROJEKT/SSZJbackend/sszj",
  "author": {
    "name": "Mikola Lysenko"
  },
  "browser": "dom-pixels.js",
  "bugs": {
    "url": "https://github.com/scijs/get-pixels/issues"
  },
  "dependencies": {
    "data-uri-to-buffer": "0.0.3",
    "jpeg-js": "^0.1.1",
    "mime-types": "^2.0.1",
    "ndarray": "^1.0.13",
    "ndarray-pack": "^1.1.1",
    "node-bitmap": "0.0.1",
    "omggif": "^1.0.5",
    "parse-data-uri": "^0.2.0",
    "pngjs": "^2.0.0",
    "request": "^2.44.0",
    "through": "^2.3.4"
  },
  "description": "Reads the pixels of an image as an ndarray",
  "devDependencies": {
    "beefy": "^1.1.0",
    "brfs": "^1.2.0",
    "browserify": "^3.44.0",
    "tape": "^2.12.3"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "8d9795beae18850b840f749581badc05d3e36e41",
    "tarball": "https://registry.npmjs.org/get-pixels/-/get-pixels-3.3.0.tgz"
  },
  "gitHead": "380bbda330666e4a4066c48ef5a42770d13bcd5c",
  "homepage": "https://github.com/scijs/get-pixels#readme",
  "keywords": [
    "ndarray",
    "pixel",
    "get",
    "read",
    "pixel",
    "image",
    "png",
    "jpeg",
    "jpg",
    "jpe",
    "gif",
    "decode",
    "buffer",
    "data",
    "parse",
    "dom",
    "node",
    "browserify"
  ],
  "license": "MIT",
  "main": "node-pixels.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    },
    {
      "name": "rreusser",
      "email": "rsreusser@gmail.com"
    },
    {
      "name": "planeshifter",
      "email": "pgb@andrew.cmu.edu"
    },
    {
      "name": "jaspervdg",
      "email": "th.v.d.gronde@hccnet.nl"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "get-pixels",
  "optionalDependencies": {},
  "readme": "get-pixels\n==========\nGiven a URL/path, grab all the pixels in an image and return the result as an [ndarray](https://github.com/mikolalysenko/ndarray).  Written in 100% JavaScript, works both in browserify and in node.js and has no external native dependencies.\n\nCurrently the following file formats are supported:\n\n* `PNG`\n* `JPEG`\n* `GIF`\n\nExample\n=======\n\n```javascript\nvar getPixels = require(\"get-pixels\")\n\ngetPixels(\"lena.png\", function(err, pixels) {\n  if(err) {\n    console.log(\"Bad image path\")\n    return\n  }\n  console.log(\"got pixels\", pixels.shape.slice())\n})\n```\n\nInstall\n=======\n\n    npm install get-pixels\n\n### `require(\"get-pixels\")(url[, type], cb(err, pixels))`\nReads all the pixels from url into an ndarray.\n\n* `url` is the path to the file.  It can be a relative path, an http url, a data url, or an [in-memory Buffer](http://nodejs.org/api/buffer.html).\n* `type` is an optional mime type for the image (required when using a Buffer)\n* `cb(err, pixels)` is a callback which gets triggered once the image is loaded.\n\n**Returns** An ndarray of pixels in raster order having shape equal to `[width, height, channels]`.\n\n**Note** For animated GIFs, a 4D array is returned with shape `[numFrames, width, height, 4]`, where each frame is a slice of the final array.\n\nCredits\n=======\n(c) 2013-2014 Mikola Lysenko. MIT License\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/scijs/get-pixels.git"
  },
  "scripts": {
    "test": "tap test/*.js",
    "test-browser": "beefy test/test.js --open  -- -t brfs"
  },
  "version": "3.3.0"
}
